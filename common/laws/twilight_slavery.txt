# group = this is the law_group a law belongs to
# icon = graphical icon shown in-game
# modifier = {} modifier on country for having adopted this law

# Overwritten
law_debt_slavery = {
	group = lawgroup_slavery

	progressiveness = 0

	icon = "gfx/interface/icons/law_icons/debt_slavery.dds"

	disallowing_laws = {
		law_multicultural
	}

	on_activate = {
		ig:ig_landowners ?= {
			if = {
				limit = {
					NOT = { has_ideology = ideology_pro_slavery }
				}
				add_ideology = ideology_pro_slavery
			}
		}
	}

	modifier = {
	}

	pop_support = {
		value = 0

		add = {
			desc = "POP_SLAVES"
			if = {
				limit = {
					is_pop_type = slaves
				}
				value = 1
			}
		}
		add = {
			desc = "POP_ACADEMICS"
			if = {
				limit = {
					is_pop_type = academics
				}
				value = 0.1
			}
		}
		add = {
			desc = "POP_CLERGYMEN_NON_PHILOSOPHICAL_RELIGION"
			if = {
				limit = {
					owner.religion = {
						NOT = {
							has_discrimination_trait = philosophical
						}
					}
					is_pop_type = clergymen
				}
				value = 0.05
			}
		}
	}

	possible_political_movements = {
		law_slavery_banned
		law_legacy_slavery
	}

	# AI should never enact debt slavery
	ai_will_do = {
		always = no
	}

	revolution_state_weight = {
		value = 1
		if = {
			limit = {
				is_slave_state = no
				NOT = { has_variable = former_slave_state }
			}
			multiply = 0.25
		}
	}
}

# Overwritten
law_slave_trade = {
	group = lawgroup_slavery

	progressiveness = 0

	icon = "gfx/interface/icons/law_icons/slave_trade.dds"

	disallowing_laws = {
		law_cultural_exclusion
		law_multicultural
	}

	on_activate = {
		if = {
			limit = { has_variable = slavery_recently_abolished }
			custom_tooltip = {
				text = enslave_discriminated_farm_workers_tt
				every_scope_state = {
					limit = { has_variable = former_slave_state }
					enslave_discriminated_farm_workers = yes
				}
			}
			remove_variable = slavery_recently_abolished
			every_scope_state = {
				remove_variable = former_slave_state
			}
		}

		ig:ig_landowners ?= {
			if = {
				limit = {
					NOT = { has_ideology = ideology_pro_slavery }
				}
				add_ideology = ideology_pro_slavery
			}
		}
	}

	modifier = {
		interest_group_ig_landowners_pol_str_mult = 0.5
	}

	possible_political_movements = {
		law_slavery_banned
		law_legacy_slavery
	}

	pop_support = {
		value = 0

		add = {
			desc = "POP_ARISTOCRATS"
			if = {
				limit = {
					is_pop_type = aristocrats
				}
				value = 0.1
			}
		}
	}

	ai_will_do = {
		exists = ruler
		ruler = {
			has_ideology = ideology_slaver
		}
	}

	revolution_state_weight = {
		value = 1
		if = {
			limit = {
				is_slave_state = no
				NOT = { has_variable = former_slave_state }
			}
			multiply = 0.25
		}
	}
}

# Overwritten
law_legacy_slavery = {
	group = lawgroup_slavery

	progressiveness = 50

	icon = "gfx/interface/icons/law_icons/legacy_slavery.dds"

	# no need to add disallowing_laws here since it can only be enacted from Slave Trade

	unlocking_laws = {
		law_slave_trade
	}

	on_activate = {
		if = {
			limit = { has_variable = slavery_recently_abolished }
			custom_tooltip = {
				text = enslave_discriminated_farm_workers_tt
				every_scope_state = {
					limit = { has_variable = former_slave_state }
					enslave_discriminated_farm_workers = yes
				}
			}
			remove_variable = slavery_recently_abolished
			every_scope_state = {
				remove_variable = former_slave_state
			}
		}

		ig:ig_landowners ?= {
			if = {
				limit = {
					NOT = { has_ideology = ideology_pro_slavery }
				}
				add_ideology = ideology_pro_slavery
			}
		}
	}

	modifier = {
		interest_group_ig_landowners_pol_str_mult = 0.25
	}

	possible_political_movements = {
		law_slavery_banned
	}

	pop_support = {
		value = 0
		add = {
			desc = "POP_ACADEMICS"
			if = {
				limit = {
					is_pop_type = academics
				}
				value = 0.1
			}
		}
		add = {
			desc = "POP_CLERGYMEN_NON_PHILOSOPHICAL_RELIGION"
			if = {
				limit = {
					owner.religion = {
						NOT = {
							has_discrimination_trait = philosophical
						}
					}
					is_pop_type = clergymen
				}
				value = 0.05
			}
		}
	}

	revolution_state_weight = {
		value = 1
		if = {
			limit = {
				is_slave_state = no
				NOT = { has_variable = former_slave_state }
			}
			multiply = 0.25
		}
	}
}