# Root = Country

# Pulse #

on_monthly_pulse_country = {
	events = {
		communism.8 # Red Army
		peoples_springtime.1
		opium_wars.1
	}
	effect = {
	}
	# Election Events
	random_events = {
		50 = 0
		1 = election_liberal_events.1
		1 = election_liberal_events.2
		1 = election_liberal_events.3
		1 = election_liberal_events.4
		1 = election_conservative_events.1
		1 = election_conservative_events.2
		1 = election_conservative_events.3
		1 = election_conservative_events.4
		1 = election_moderate_events.1
		1 = election_moderate_events.2
		1 = election_contextual_events.1
		1 = election_contextual_events.2
		1 = election_contextual_events.3
		1 = election_contextual_events.4
		1 = election_contextual_events.5
		1 = election_contextual_events.6
		1 = election_contextual_events.7
		1 = election_contextual_events.8
		1 = election_neutral.1
		1 = election_neutral.2
		1 = election_neutral.3
		1 = election_neutral.4
		1 = election_neutral.5
		1 = election_neutral.6
		1 = election_neutral.7
		1 = election_neutral.8
		1 = election_other_parties_events.1
		1 = election_other_parties_events.2
		1 = election_other_parties_events.3
		1 = election_other_parties_events.4
		1 = election_other_parties_events.5
		1 = ig_leaders.3
	}
}

on_yearly_pulse_country = {
	effect = {
		# IG leader death
		random_list = {
			1 = {
				trigger_event = { id = character_events.100 }
			}
			1 = { }
		}
	}
	random_events = {
		150 = 0

		20 = government_conflicts.1
		20 = government_conflicts.2
		20 = government_conflicts.3
		20 = government_conflicts.4
		20 = government_conflicts.5
		20 = government_conflicts.6
		20 = government_conflicts.7
		20 = government_conflicts.8
		20 = government_conflicts.9
		20 = government_conflicts.10
		20 = government_conflicts.11
		#
		10 = goldrush.3
		10 = goldrush.4
		#
		20 = ig_leaders.20
		20 = ig_leaders.4
		20 = ig_leaders.5
		20 = ig_leaders.6

		#Character Events
		20 = character_events.2
		20 = character_events.3
		20 = character_events.4
		20 = character_events.5
		100 = character_events.6

		# Border Situations
		20 = neighbor_events.1
		20 = neighbor_events.2
		20 = neighbor_events.3
		20 = neighbor_events.4
		20 = neighbor_events.5
		20 = neighbor_events.6
		20 = neighbor_events.7

		# Commander Events
		20 = commander_events.2
		20 = commander_events.4
		20 = commander_events.5
		5 = commander_events.6

		# Law Events
		50 = law_events.5
		50 = law_events.6

		# Cultural Homeland Events
		10 = cultural_homeland_events.1
		10 = cultural_homeland_events.10
		10 = cultural_homeland_events.20
		10 = cultural_homeland_events.30
		10 = cultural_homeland_events.40
		10 = cultural_homeland_events.50

		# IGs and Revolutions
		20 = ig_revolutions.1
		20 = ig_revolutions.2
		20 = ig_revolutions.3
		20 = ig_revolutions.4
		20 = ig_revolutions.5
		20 = ig_revolutions.6
		20 = ig_revolutions.7
		20 = ig_revolutions.8
		20 = ig_revolutions.9

		#IG Suppression
		20 = ig_suppression_events.1

		# Technology
		20 = technology_events.1
		20 = technology_events.10
		20 = technology_events.20
		20 = technology_events.30
		20 = technology_events.40
		20 = technology_events.50

		# Industrial Accidents
		10 = industrial_accident_events.1
		10 = industrial_accident_events.2
		10 = industrial_accident_events.3
		10 = industrial_accident_events.4
		20 = industrial_accident_events.5
		20 = industrial_accident_events.6

		# Crime (Why do police not just comment out crime events?)
		10 = crime_events.1
		10 = crime_events.2
		10 = crime_events.10

		# Obligations
		10 = obligation_events.1
		10 = obligation_events.3
		10 = obligation_events.5

		# Prostitution and police
		20 = prostitution.1
		20 = prostitution.2
		20 = prostitution.3
		20 = prostitution.4
		20 = cable_street.1

		#Natural Disasters
		3 = natural_disaster_events.1
		3 = natural_disaster_events.2
		1 = natural_disaster_events.3
		1 = natural_disaster_events.4
		3 = natural_disaster_events.5
		3 = natural_disaster_events.6
		3 = natural_disaster_events.7
		1 = natural_disaster_events.8

		# # Taiping Heavenly Kingdom
		# 20 = heavenly.1

		# Warlords
		20 = warlord_china_events.110
		20 = warlord_china_events.301

		# Assassination
		10 = assassination_events.1

		# Oil Rush Scandal
		20 = oil_rush.5

		#Decree
		20 = decree_events.1
		20 = decree_events.2
		20 = decree_events.3
		20 = decree_events.4
		20 = decree_events.5
		20 = decree_events.6
		20 = decree_events.100
		20 = decree_events.101
		20 = decree_events.102
		20 = decree_events.103
		20 = decree_events.104
		20 = decree_events.105
		20 = decree_events.106
		20 = decree_events.107
		20 = decree_events.108
		20 = decree_events.109

		50 = strike.5
		50 = strike.6
		50 = strike.7

		10 = opium_wars.8

		10 = south_america.3

		20 = communism.9
		20 = communism.7

		100 = nihilism.1

		#psychology
		20 = psychology_events.1
		20 = psychology_events.2
		20 = psychology_events.3
		20 = psychology_events.4
		20 = psychology_events.5
		20 = psychology_events.6

		#nationalism
		20 = fascism_events.8

		20 = dreadnought_hoax.1

		20 = autocracy.2
		20 = autocracy.3

		# rivalry events
		10 = diplomatic_friction.1
		10 = diplomatic_friction.2
		10 = diplomatic_friction.20

		# Titanic
		10 = titanic.1

		# trains
		5 = trains.1

		30 = cholera.1

		# Slave revolts
		5 = slave_revolt.1
		5 = slave_revolt.2
		5 = slave_revolt.3

		# Multiculturalism Events
		20 = discrimination_events.1
		20 = discrimination_events.2
		20 = discrimination_events.3
		20 = discrimination_events.4

		# Trade routes
		20 = trade_route_events.1
		20 = trade_route_events.2
		20 = trade_route_events.3
		20 = trade_route_events.4
		20 = trade_route_events.5

		#PMs
		20 = pm_events.1
		20 = pm_events.2
		20 = pm_events.4
		20 = pm_events.5

		# Vampire Panic
		1 = vampire_panic.1
	}

	# Springtime of the Peoples
	random_events = {
		5 = 0
		1 = peoples_springtime.6
	}

	random_events = {
		4 = 0
		1 = wedding.1 # on average, monarchs should marry within 5 years of coming of age
	}

	# Slavery Abolition
	random_events = {
		4 = 0
		1 = slavery_law_events.7
	}
}

on_half_yearly_pulse_country = {
	# Secession
	random_events = {
		20 = secession_events.1
		20 = secession_events.2
		20 = secession_events.3
		20 = secession_events.4
		20 = secession_events.5
		20 = secession_events.6
		20 = secession_events.7
		20 = secession_events.8
		20 = secession_events.9
	}
}

on_five_year_pulse_country = {
	events = {
		generals.1
	}
}

on_decade_pulse_country = {
	random_events = {
		99 = 0
		1 = plague.1
	}
}

# Non-pulse #

# Fires for all countries with an interest marker in the play's region
# Root = Country who owns the interest marker
# scope:diplomatic_play = The diplomatic play that has been started
on_diplomatic_play_started = {}

on_country_default = {
	effect = { add_modifier = country_default }
}

on_country_no_longer_default = {
	effect = { remove_modifier = country_default }
}

on_peace_agreement_signed_war_leader = {
	effect = { post_notification = peace_agreement_signed_war_leader }
}

on_peace_agreement_signed_war_participant = {
	effect = { post_notification = peace_agreement_signed_war_participant }
}

on_peace_agreement_signed_non_participant = {
	effect = { post_notification = peace_agreement_signed_non_participant }
}

on_capitulation = {}

on_self_capitulated_notification = {
	effect = {
		post_notification = self_capitulated
		set_variable = {
			name = recent_capitulation
			months = short_modifier_time
		}
	}
}

on_enemy_capitulated_notification = {
	effect = { post_notification = enemy_capitulated }
}

on_ally_capitulated_notification = {
	effect = { post_notification = ally_capitulated }
}

# scope:target = Uprising country
on_revolution_end = {
	effect = {
		if = {
			limit = {
				ROOT = {
					has_variable = peccavi_ach_possible
				}
			}
			scope:target = {
				set_variable = peccavi_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = perkeletankki_ach_possible
				}
			}
			scope:target = {
				set_variable = perkeletankki_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = luxurious_luxembourg_ach_possible
				}
			}
			scope:target = {
				set_variable = luxurious_luxembourg_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = anarchy_in_the_uk_ach_possible
				}
			}
			scope:target = {
				set_variable = anarchy_in_the_uk_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = muhammed_alis_ambition_ach_possible
				}
			}
			scope:target = {
				set_variable = muhammed_alis_ambition_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = an_empire_under_the_pun_ach_possible
				}
			}
			scope:target = {
				set_variable = an_empire_under_the_pun_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = i_didnt_vote_for_pedro_ach_possible
				}
			}
			scope:target = {
				set_variable = i_didnt_vote_for_pedro_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = go_west_young_man_ach_possible
				}
			}
			scope:target = {
				set_variable = go_west_young_man_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = the_western_protectorate_ach_possible
				}
			}
			scope:target = {
				set_variable = the_western_protectorate_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = the_paris_commune_ach_possible
				}
			}
			scope:target = {
				set_variable = the_paris_commune_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = barbarys_back_ach_possible
				}
			}
			scope:target = {
				set_variable = barbarys_back_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = miners_and_minors_ach_possible
				}
			}
			scope:target = {
				set_variable = miners_and_minors_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = healthy_man_of_europe_ach_possible
				}
			}
			scope:target = {
				set_variable = healthy_man_of_europe_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = habsburg_resurgence_ach_possible
				}
			}
			scope:target = {
				set_variable = habsburg_resurgence_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = great_game_ach_possible
				}
			}
			scope:target = {
				set_variable = great_game_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = bourbon_for_everyone_ach_possible
				}
			}
			scope:target = {
				set_variable = bourbon_for_everyone_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = american_territory_ach_possible
				}
			}
			scope:target = {
				set_variable = american_territory_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = broken_promises_ach_possible
				}
			}
			scope:target = {
				set_variable = broken_promises_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = the_berlin_conference_ach_possible
				}
			}
			scope:target = {
				set_variable = the_berlin_conference_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = belle_epoque_ach_possible
				}
			}
			scope:target = {
				set_variable = belle_epoque_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = serfs_up_ach_possible
				}
			}
			scope:target = {
				set_variable = serfs_up_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = risorgimento_ach_possible
				}
			}
			scope:target = {
				set_variable = risorgimento_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = three_hurrahs_ach_possible
				}
			}
			scope:target = {
				set_variable = three_hurrahs_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = solomons_quest_ach_possible
				}
			}
			scope:target = {
				set_variable = solomons_quest_ach_possible
			}
		}


		if = {
			limit = {
				ROOT = {
					has_variable = i_am_a_scandinavian_ach_possible
				}
			}
			scope:target = {
				set_variable = i_am_a_scandinavian_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = reading_campaign_ach_possible
				}
			}
			scope:target = {
				set_variable = reading_campaign_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = we_are_not_amused_ach_possible
				}
			}
			scope:target = {
				set_variable = we_are_not_amused_ach_possible
			}
		}

		if = {
			limit = {
				ROOT = {
					has_variable = star_swarmed_banner_ach_possible
				}
			}
			scope:target = {
				set_variable = star_swarmed_banner_ach_possible
			}
		}
	}
}

# This action is triggered after `on_revolution_end`
on_civil_war_won = {
	effect = {
		if = {
			limit = { has_global_variable = achievement_revo_needed }
			set_global_variable = achievement_revolutionary
		}
	}
}

on_wargoal_enforced = {
	effect = {
		set_variable = {
			name = recently_won_war
			days = 600
			value = yes
		}
	}
}

# scope:target = Uprising country
on_revolution_start = {
	effect = {
		scope:target = { effect_new_country_setup = yes }
	}
}

on_rank_changed = {
	effect = { post_notification = rank_changed_notification }
}

on_native_uprising = {
	effect = { post_notification = native_uprising_notification }
}

# scope:target = Party created
on_party_created = {
	effect = { debug_log = "[SCOPE.sParty('target').GetNameNoFormatting] Created" }
}

# scope:target = Party disbanded
on_party_disbanded = {
	effect = { debug_log = "[SCOPE.sParty('target').GetNameNoFormatting] Disbanded" }
}

on_election_campaign_start = {
	effect = { debug_log = "Election Campaign Started" }
}

on_election_campaign_end = {
	effect = { debug_log = "Election Campaign Ended" }
}

on_obligation_owed_by_us_expired = {
	effect = { post_notification = obligation_owed_by_us_expired }
}

on_obligation_owed_to_us_expired = {
	effect = { post_notification = obligation_owed_to_us_expired }
}

on_start_supporting_unification = {
	effect = { post_notification = start_supporting_unification }
}

on_unification_candidate_added = {
	effect = { post_notification = unification_candidate_added }
}

on_unification_candidate_removed = {
	effect = { post_notification = unification_candidate_removed }
}

on_stop_supporting_unification = {
	effect = { post_notification = stop_supporting_unification }
}

on_repudiate_obligation = {
	effect = {
		scope:target_country = {
			change_relations = { country = root value = -50 }
			hidden_effect = {
				random_list = {
					50 = {
						if = {
							limit = {
								country_rank > root.country_rank
							}
							set_secret_goal = {
								country = root
								secret_goal = dominate
							}
						}
						else = {
							set_secret_goal = {
								country = root
								secret_goal = antagonize
							}
						}
					}
					50 = {}
				}
			}
		}
		every_country = {
			limit = {
				NOT = { this = scope:target_country }
				root = { owes_obligation_to = prev }
			}
			change_relations = { country = root value = -30 }
			hidden_effect = {
				random_list = {
					25 = {
						if = {
							limit = {
								country_rank > root.country_rank
							}
							set_secret_goal = {
								country = root
								secret_goal = dominate
							}
						}
						else = {
							set_secret_goal = {
								country = root
								secret_goal = antagonize
							}
						}
					}
					75 = {}
				}
			}
		}
		hidden_effect = { # Should not stack the modifier
			if = {
				limit = { has_modifier = repudiated_obligation }
				remove_modifier = repudiated_obligation
			}
		}
		add_modifier = {
			name = repudiated_obligation
			months = normal_modifier_time
			is_decaying = yes
		}
	}
}

# Root = invaded country
# scope:actor = invading country
# scope:admiral = invading admiral
# scope:general = invading general
# scope:state = location state
on_naval_invasion = {
	effect = {
		post_notification = naval_invasion_against_us
	}
}
