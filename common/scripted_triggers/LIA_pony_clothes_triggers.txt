##실험중
##여기가 바로 스크립티드 트리거!지만 나로써는 포트레잇 관련한 트리거들인거지.
##gfx\portraits\portrait_modifiers 의 lia_pony_portraits.txt 와, lia_pony_accessories.txt 에서 사용될 트리거들이야.

pony_clothes_character_trigger = {	#<<이건 캐릭터가 포니인지 체크하는 용도의 트리거.
	exists = scope:character	#<<아 참고로 캐릭터와 팝은 다른 존재니깐, 조건 짤 때 유의해야해. 우선 해당 캐릭터가 존재는 하는지부터 의례적으로 체크해주고,
	scope:character = {	#<<바로 그 캐릭터의
		#culture = cu:pony	#<<문화가 포니인지 체크!
		OR = {
			#culture = cu:earth_pony
			#culture = cu:pegasus
			#culture = cu:unicorn
			#culture = cu:alicorn
			culture = cu:pony
			#culture = cu:bat_pony
			culture = cu:crystal_pony
		}
	}
}

pony_clothes_pop_trigger = {	#<<이건 위랑 거의 동일하지만 팝에게 적용되는 것. 보다시피 캐릭터랑 팝 둘 다 조건을 따로 만들어줘야 해.
	exists = scope:pop
	scope:pop = {
		#culture = cu:pony
		OR = {
			#culture = cu:earth_pony
			#culture = cu:pegasus
			#culture = cu:unicorn
			#culture = cu:alicorn
			culture = cu:pony
			#culture = cu:bat_pony
			culture = cu:crystal_pony
		}
	}
}

####
earthpony_clothes_character_trigger = {
	exists = scope:character
	scope:character = {
		#culture = cu:earth_pony
		has_trait = trait_earth_pony
	}
}
earthpony_clothes_pop_trigger = {
	exists = scope:pop
	scope:pop = {
		#culture = cu:earth_pony
		OR = {
			culture = cu:pony
			culture = cu:crystal_pony
		}
		is_pop_type = farmers
	}
}

pegasus_clothes_character_trigger = {
	exists = scope:character
	scope:character = {
		#culture = cu:pegasus
		has_trait = trait_pegasus
	}
}
pegasus_clothes_pop_trigger = {
	exists = scope:pop
	scope:pop = {
		#culture = cu:pegasus
		OR = {
			culture = cu:pony
			culture = cu:crystal_pony
		}
		OR = {
			is_pop_type = flightponies
			is_pop_type = weatherponies
		}
	}
}

unicorn_clothes_character_trigger = {
	exists = scope:character
	scope:character = {
		#culture = cu:unicorn
		has_trait = trait_unicorn
	}
}
unicorn_clothes_pop_trigger = {
	exists = scope:pop
	scope:pop = {
		#culture = cu:unicorn
		OR = {
			culture = cu:pony
			culture = cu:crystal_pony
		}
		OR = {
			is_pop_type = mages
			is_pop_type = archmages
		}
	}
}

alicorn_clothes_character_trigger = {
	exists = scope:character
	scope:character = {
		#culture = cu:alicorn
		has_trait = alicorn_immortal
	}
}
#alicorn_clothes_pop_trigger = {
#	exists = scope:pop
#	scope:pop = {
#		culture = cu:alicorn
#	}
#}


batpony_clothes_character_trigger = {
	exists = scope:character
	scope:character = {
		culture = cu:bat_pony
	}
}
batpony_clothes_pop_trigger = {
	exists = scope:pop
	scope:pop = {
		culture = cu:bat_pony
	}
}


pony_upper_clothes_pop_trigger = {	#<<이건 상류계급에게만 참이 되는 조건
	exists = scope:pop
	scope:pop = {	#<<해당 팝들이
		#culture = cu:pony	#<<우선 포니인지 체크하고,
		OR = {
			#culture = cu:earth_pony
			#culture = cu:pegasus
			#culture = cu:unicorn
			#culture = cu:alicorn
			culture = cu:pony
			culture = cu:bat_pony
			culture = cu:crystal_pony
		}
		OR = {	#<<그 팝의 직업이?
			is_pop_type = aristocrats	#<<상류층으로 분류되는 직업들이라면?
			is_pop_type = capitalists	#<<이 조건을 만족하게 되고, 그렇게 되면 lia_pony_accessories.txt에서는
			is_pop_type = academics	#<<pony_accessory 유전타입에 lia_pony_test_portrait_accessory_temp탬플릿을 씌워서 나타내게 되지. 즉 상류계급 포니팝들은 자동으로 단안경과 모자를 쓰고 나오는것처럼 보이게 될 거야.
		}
	}
}
